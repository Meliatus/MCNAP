COMENTARIOS FINALES:

En líneas generales tu argumentación es correcta en los tres apartados. Sin embargo, si entramos en detalle entonces debemos realizar algunas observaciones que contradicen parcialmente tus argumentos. Veamos cuáles son:

a) Algoritmo centralizado. Es cierto que introducirá un único punto de fallo y ese es su principal problema. Cuantos más procesos haya, mayor trabajo tendrá el coordinador central. Eso también es cierto. Sin embargo, el "trabajo" a llevar a cabo para garantizar exclusión mutua entre todos los solicitantes es trivial. Basta con saber si la sección crítica a proteger está ocupada o no. Si lo está, basta con no responder al solicitante y guardar su identificador en una cola de peticiones. Cuando el propietario de la sección la libere (enviando el mensaje correspondiente), responderemos al primer solicitante de la cola (para que así pueda continuar y acceda a la sección crítica), lo extraeremos de esa cola y lo registraremos como el propietario actual. Son unas pocas líneas de código que difícilmente sobrecargarán a este coordinador. De hecho, este es el algoritmo más ligero de entre los tres citados y, por ello, también será el más escalable.

b) Algoritmo descentralizado. El algoritmo descentralizado enviaba un mensaje de solicitud a todos los demás participantes. Si un participante, al recibir el mensaje, era el propietario de la sección crítica, no respondía al solicitante. En otro caso, respondía de inmediato (salvo en el caso de que él también intente acceder a la sección y tenga un identificador inferior al del solicitante, para deshacer así el empate y resolver un posible interbloqueo). El solicitante solo podrá entrar cuando reciba respuesta de todos los demás. Esto podría fallar tan pronto como alguno de los demás procesos falle, pues los solicitantes quedarían eternamente esperando la llegada del mensaje que les otorgaría el permiso de entrada, si el hipotético emisor de ese permiso hubiera fallado. Por ello, esta variante "descentralizada" no llega a respetar todas las propiedades de un buen algoritmo descentralizado (pero era el algoritmo descrito en el libro de Tanenbaum al que hacía referencia el vínculo utilizado en esta actividad; Tanenbaum argumentaba, acertadamente, que la mayoría de los algoritmos descentralizados de exclusión mutua no funcionaron).

Como bien dices, un algoritmo descentralizado que intente resolver este problema necesitará muchos más mensajes que la solución centralizada.

c) Algoritmo para anillos. En este caso se utiliza un token que va rotando por el anillo. Quien posea el token podrá acceder a la sección crítica y no transmitirá ese token a su proceso sucesor en el anillo hasta que haya finalizado su ejecución de la sección crítica. Si el receptor del token no pretende entrar en la sección crítica, entonces propaga de inmediato el token a su sucesor en el anillo.

Este algoritmo no utiliza ningún tipo de coordinador. Te equivocas al mencionar eso en tu respuesta. 

Sí que mantiene todos los demás problemas que has citado. El algoritmo falla si falla el poseedor actual del token, pues en ese caso se pierde el token y resultará complicado detectar esa situación y volverlo a generar (¿Cómo se puede distinguir el fallo de quien tenga el token de otra situación en la que ese propietario se ejecuta en una máquina lenta o saturada por una carga excesiva?). También habrá problemas cuando falle cualquier otro proceso, pues habría que recomponer el anillo y necesitamos un alto grado de sincronía para ser capaces de detectar esas situaciones.

En resumen, el algoritmo centralizado tiene el inconveniente de ofrecer un punto único de fallo, pero al menos es altamente eficiente. Por el contrario, los demás algoritmos fallan cuando falla uno cualquiera de sus procesos, por lo que son mucho peores que el centralizado a la hora de gestionar las situaciones de fallo. Además, son muy ineficientes, tanto en cuanto al número de mensajes que necesitan intercambiar los procesos participantes como en cuanto al tiempo necesario para superar el protocolo de entrada a la sección crítica.

Por todo lo indicado, obtienes una calificación de 7 sobre 10 en esta actividad. Esto aporta 1.4 puntos (sobre 2 posibles) a tu calificación global.